package jp.co.net_tbc.android.tbctideapp.thread;import android.util.Log;import com.thoughtworks.xstream.XStream;import java.io.InputStream;import java.net.HttpURLConnection;import java.net.MalformedURLException;import java.net.URL;import java.util.Arrays;import java.util.HashMap;import java.util.List;import java.util.Map;import jp.co.net_tbc.android.tbctideapp.helper.ApiClient;import jp.co.net_tbc.android.tbctideapp.model.CalendarModel;import jp.co.net_tbc.android.tbctideapp.model.FishStarModel;import jp.co.net_tbc.android.tbctideapp.model.SpotModel;import jp.co.net_tbc.android.tbctideapp.model.TidedetailModel;/** * Created by Kenji Nagai on 2016/11/12. */public class FishStarThread implements Runnable {    private static List<String> ignoreList = Arrays.asList("port-id", "port-name", "latitude1", "longitude1", "year", "month", "day", "youbi");    /**     *  @param String1 Class Field Name     *  @param String2 XML Parameter Name     * */    private static Map<String, String> xmlDesirializeMap = new HashMap<String, String>() {        {put("latitude", "latitude2");}        {put("longitude", "longitude2");}        {put("sunriseTime", "sunrise-time");}        {put("sunsetTime", "sunset-time");}        {put("moonriseTime", "moonrise-time");}        {put("moonsetTime", "moonset-time");}        {put("tideName", "tide-name");}    };    private static Map<String, String> xmlDesirializeMap2 = new HashMap<String, String>(){        {put("tideTime", "tide-time");}        {put("tideLevel", "tide-level");}    };    @Override    public void run() {        URL url = null;        SpotModel sportModel = SpotModel.getInstance();        CalendarModel calendarModel = CalendarModel.getInstance();        try {             url = new URL("http://fishing-community.appspot.com/tidexml/index?portid=" + sportModel.getPortId() + "&year=" + calendarModel.getYear() + "&month=" + calendarModel.getMonth() + "&day=" + calendarModel.getDay());        } catch (MalformedURLException e) {            e.printStackTrace();        }        try {            HttpURLConnection connection = (HttpURLConnection)url.openConnection();            connection.setRequestMethod("GET");            connection.connect();            InputStream is = connection.getInputStream();            // デシリアライズ            XStream xs = new XStream();            // FishStarModel            xs.alias("tideinfo", FishStarModel.class);            setAliasAttribute(xs, xmlDesirializeMap, FishStarModel.class);            setIgnoreList(xs, ignoreList, FishStarModel.class);            xs.alias("tidedetails", TidedetailModel.class);            xs.addImplicitCollection(FishStarModel.class, "tidedetails");            // TideDetailModel            setAliasAttribute(xs, xmlDesirializeMap2, TidedetailModel.class);            FishStarModel fishStarModel = (FishStarModel) xs.fromXML(is);            // インスタンスの値をシングルトンに設定する            FishStarModel nowInstance = FishStarModel.getInstance();            nowInstance.setFishStarModel(fishStarModel);        } catch (Exception e) {            e.printStackTrace();        }    }    private void setIgnoreList(XStream xs, List<String> ignoreList,  Class targetClass){        for (String ignoreField: ignoreList ) {            xs.omitField(targetClass, ignoreField);        }    }    private void setAliasAttribute(XStream xs, Map<String, String> attributeMap, Class targetClass){        for(Map.Entry<String, String> entry: attributeMap.entrySet()){            xs.aliasAttribute(targetClass, entry.getKey(), entry.getValue());        }    }}